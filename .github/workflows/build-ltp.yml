name: "Compile LTP Tests"
on:
  schedule:
    -  cron: "0 0 1 * *"
  workflow_dispatch:

permissions:
  contents: write # to create release

jobs:
  job:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - env:
              RELEASE: x86_64
              CC: gcc
              TREE: out
              MAKE_INSTALL: 1
              DIR: /etc 
          - env:
              RELEASE: aarch64
              ARCH: arm64
              CC: aarch64-linux-gnu-gcc
              MAKE_INSTALL: 1
              TREE: out
              VARIANT: cross-compile
              DIR: /etc

    container:
      image: "ghcr.io/elektrobit/ebcl_dev_container:${{ vars.container_version }}"
      env: ${{ matrix.env }}
      options: --privileged -v/boot:/boot

    steps:
    - name: Show OS
      run: cat /etc/os-release

    - name: Git checkout
      uses: actions/checkout@v4
      with:
        repository: linux-test-project/ltp

    # INSTALL="debian", because ubuntu is a symlink to debian anyway, but for cross-compiling ther is no symling for ubuntu-cross-compile.sh to debian..
    - name: Install additional packages
      run: |
        INSTALL="debian"
        ACTION="$VARIANT" ./ci/$INSTALL.sh
        if [ "$VARIANT" ]; then ./ci/$INSTALL.$VARIANT.sh; fi

    - name: Compiler version
      run: $CC --version

    - name: Autotools
      run: ./build.sh -r autotools -p $DIR

    - name: Configure
      run: |
        if [ "$METADATA" = "asciidoc-pdf" ]; then CONFIGURE_OPT_EXTRA="--with-metadata-generator=asciidoc --enable-metadata-pdf"; fi
        if [ "$METADATA" = "asciidoctor" ]; then CONFIGURE_OPT_EXTRA="--with-metadata-generator=asciidoctor"; fi
        if [ "$METADATA" = "asciidoctor-pdf" ]; then CONFIGURE_OPT_EXTRA="--with-metadata-generator=asciidoctor --enable-metadata-pdf"; fi
        case "$VARIANT" in cross-compile*) BUILD="cross";; i386) BUILD="32";; *) BUILD="native";; esac
        CONFIGURE_OPT_EXTRA="$CONFIGURE_OPT_EXTRA" ./build.sh -r configure -o ${TREE:-in} -t $BUILD -c $CC -p $DIR

    - name: Compile
      run: ./build.sh -r build -o ${TREE:-in} -p $DIR

    - name: Test C API
      run: |
        case "$VARIANT" in cross-compile*) BUILD="cross";; i386) BUILD="32";; *) BUILD="native";; esac
        ./build.sh -r test-c -o ${TREE:-in} -t $BUILD

    - name: Test shell API
      run: |
        case "$VARIANT" in cross-compile*) BUILD="cross";; i386) BUILD="32";; *) BUILD="native";; esac
        ./build.sh -r test-shell -o ${TREE:-in} -t $BUILD

    - name: Test shell loader
      run: |
        case "$VARIANT" in cross-compile*) BUILD="cross";; i386) BUILD="32";; *) BUILD="native";; esac
        ./build.sh -r test-shell-loader -o ${TREE:-in} -t $BUILD

    - name: Install
      run: |
        if [ "$MAKE_INSTALL" = 1 ]; then INSTALL_OPT="-i"; fi
        ./build.sh -r install -o ${TREE:-in} -p $DIR $INSTALL_OPT 
    
    - name: Compress
      shell: bash
      run: |
        tar -czpf ltp_${{ matrix.env.release }}.tar.gz -C /etc/opt ltp

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: ./ltp_${{ matrix.env.release }}.tar.gz
        make_latest: false
        tag_name: ${{ matrix.env.release }}
        name: LTP Compiled Binares for ${{ matrix.env.release }}
    


